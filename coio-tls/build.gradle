apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

dependencies {
    implementation project(":coio")
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: "$kotlin_version"
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: "$kotlinxcoroutine_version"
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-jdk8', version: "$kotlinxcoroutine_version"
    implementation group: 'io.github.microutils', name: 'kotlin-logging', version: "$kotlinlogging_version"
    implementation group: 'org.slf4j', name: 'slf4j-api', version: "$slf4j_version"
    implementation group: 'io.netty', name: 'netty-buffer', version: '4.1.52.Final'
    implementation group: 'io.netty', name: 'netty-handler', version: '4.1.52.Final'
    implementation group: 'com.github.marianobarrios', name: 'tls-channel', version: '0.4.0'
    runtime group: 'io.netty', name: 'netty-tcnative-boringssl-static', version: "$tcnative_version"

    testImplementation group: 'org.assertj', name: 'assertj-core', version: "$assertj_version"
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: "$junit5_version"
    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: "$junit5_version"
    testRuntime group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: "$log4jslf4j_version"
    testImplementation group: 'io.mockk', name: 'mockk', version: "$mockk_version"
    testImplementation group: 'org.awaitility', name: 'awaitility', version: "$awaitility_version"
    testImplementation group: 'org.awaitility', name: 'awaitility-kotlin', version: "$awaitility_version"
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            groupId project.group
            artifactId project.name
            version project.version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'A CoIO extension to use TLS over any CoIOStream.')
                root.appendNode('name', 'CoIO TLS Extension')
                root.appendNode('url', 'https://github.com/gordonmu/coio')
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = bintrayUser
    key = bintrayApikey
    publications = ['maven']

    pkg {
        repo = 'jvm'
        name = project.name
        description = 'A CoIO extension to use TLS over any CoIOStream.'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/gordonmu/coio.git'
        version {
            name = project.version
            desc = project.version
            released = new Date()
        }
    }
}