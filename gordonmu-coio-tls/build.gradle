apply plugin: 'maven'
apply plugin: 'signing'

dependencies {
    implementation project(":gordonmu-coio")
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: "$kotlin_version"
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: "$kotlinxcoroutine_version"
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-jdk8', version: "$kotlinxcoroutine_version"
    implementation group: 'io.github.microutils', name: 'kotlin-logging', version: "$kotlinlogging_version"
    implementation group: 'org.slf4j', name: 'slf4j-api', version: "$slf4j_version"
    implementation group: 'io.netty', name: 'netty-buffer', version: '4.1.52.Final'
    implementation group: 'io.netty', name: 'netty-handler', version: '4.1.52.Final'
    implementation group: 'com.github.marianobarrios', name: 'tls-channel', version: '0.4.0'
    runtime group: 'io.netty', name: 'netty-tcnative-boringssl-static', version: "$tcnative_version"

    testImplementation group: 'org.assertj', name: 'assertj-core', version: "$assertj_version"
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: "$junit5_version"
    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: "$junit5_version"
    testRuntime group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: "$log4jslf4j_version"
    testImplementation group: 'io.mockk', name: 'mockk', version: "$mockk_version"
    testImplementation group: 'org.awaitility', name: 'awaitility', version: "$awaitility_version"
    testImplementation group: 'org.awaitility', name: 'awaitility-kotlin', version: "$awaitility_version"
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            groupId project.group
            artifactId project.name
            version project.version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'A CoIO extension to use TLS over any CoIOStream.')
                root.appendNode('name', 'CoIO TLS Extension')
                root.appendNode('url', 'https://github.com/gordonmu/coio')
                root.children().last() + pomConfig
            }
        }
    }
}

if (project.hasProperty('signing.keyId') && project.hasProperty('signing.password') && project.hasProperty('signing.secretKeyRingFile')) {
    signing {
        sign configurations.archives
    }
}

if (project.hasProperty('ossrhUsername') && project.hasProperty('ossrhPassword')) {
    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name project.name
                    packaging 'jar'
                    // optionally artifactId can be defined here
                    description 'A CoIO extension to use TLS over any CoIOStream.'
                    url 'https://github.com/gordonmu/coio'

                    scm {
                        connection 'scm:git:https://github.com/gordonmu/coio.git'
                        developerConnection 'scm:git:https://github.com/gordonmu/coio.git'
                        url 'https://github.com/gordonmu/coio'
                    }

                    licenses {
                        license {
                            name 'The Apache License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id 'gordonmu'
                            name 'Gordon Mu'
                            email '70778512+gordonmu@users.noreply.github.com'
                        }
                    }
                }
            }
        }
    }
}
