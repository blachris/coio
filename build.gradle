apply plugin: 'idea'
apply plugin: 'maven-publish'

buildscript {
    ext.kotlin_version = '1.8.22'
    ext.kotlinxcoroutine_version = '1.7.3'
    ext.kotlinlogging_version = '1.8.3'
    ext.protobufgradle_version = '0.9.4'
    ext.grpc_version = '1.31.1'
    ext.tcnative_version = '2.0.48.Final'
    ext.jackson_version = '2.9.8'
    ext.protoc_version = '3.10.0'
    ext.kroto_version = '0.6.1'
    ext.slf4j_version = '1.7.36'
    ext.log4jslf4j_version = '2.20.0'
    ext.junit5_version = '5.6.2'
    ext.mockk_version = '1.10.0'
    ext.assertj_version = '3.17.2'
    ext.awaitility_version = '4.0.3'
    ext.clikt_version = '2.8.0'
    ext.doxygen_version = '0.6'


    ext.repos = {
        mavenLocal()
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }

    repositories repos

    dependencies {
        classpath group: 'org.jetbrains.kotlin', name: 'kotlin-gradle-plugin', version: "$kotlin_version"
        classpath group: 'com.google.protobuf', name: 'protobuf-gradle-plugin', version: "$protobufgradle_version"
        classpath group: 'org.ysb33r.gradle', name: 'doxygen', version: "$doxygen_version"
    }

    if (project.hasProperty("executeAllTests") && project.findProperty("executeAllTests").toBoolean()) {
        gradle.startParameter.continueOnFailure = true
    }
}

ext {
    commonPom = {
        licenses {
            license {
                name = "The Apache Software License, Version 2.0"
                url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
            }
        }

        scm {
            connection = 'scm:git:https://github.com/blachris/coio.git'
            developerConnection = 'scm:git:https://github.com/blachris/coio.git'
            url = 'https://github.com/blachris/coio'
        }

        developers {
            developer {
                id = 'blachris'
                name = 'Christopher Schwarzer'
                email = '70778512+blachris@users.noreply.github.com'
            }
        }
    }
}

allprojects {
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    group 'io.github.blachris'
    version = '0.9.0'
    if (!project.hasProperty("release")) {
        version += '-SNAPSHOT'
    }

    repositories repos

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    java {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    jar {
        manifest {
            attributes(
                    'Implementation-Version': rootProject.version,
                    'Implementation-Title': rootProject.name,
                    'Created-By': "Gradle ${gradle.gradleVersion}",
                    'Build-Jdk': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                    'Build-OS': "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
            )
        }
    }

    test {
        useJUnitPlatform()
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        archiveClassifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        archiveClassifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar, javadocJar
    }
}
